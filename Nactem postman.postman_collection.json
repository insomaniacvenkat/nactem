{
	"info": {
		"_postman_id": "a57bb1f0-e8d0-46c6-b14b-ecd154cb47f6",
		"name": "Nactem postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32378655"
	},
	"item": [
		{
			"name": "http://www.nactem.ac.uk/software/acromine/dictionary.py?sf=edu",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response body is an array with at least one element\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
							"});\r",
							"\r",
							"\r",
							"// Stores the value of \"sf\" from the response in a global variable\r",
							"var sfValue = pm.response.json()[0].sf;\r",
							"pm.globals.set(\"sfValue\", sfValue);\r",
							"\r",
							"// Retrieve the saved \"sf\" value from the variable and validate it against the response\r",
							"pm.test(\"Validate response against saved 'sf' value\", function() {\r",
							"    var savedSfValue = pm.globals.get(\"sfValue\");\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    var responseSfValue = responseBody[0].sf;\r",
							"    \r",
							"    pm.expect(responseSfValue).to.equal(savedSfValue);\r",
							"});var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>SF</th>\r",
							"        <th>LF</th>\r",
							"        <th>Frequency</th>\r",
							"        <th>Since</th>\r",
							"        <th>Variations</th>\r",
							"    </tr>\r",
							"    \r",
							"    {{#each response}}\r",
							"        {{#each lfs}}\r",
							"            <tr>\r",
							"                <td>{{../sf}}</td>\r",
							"                <td>{{lf}}</td>\r",
							"                <td>{{freq}}</td>\r",
							"                <td>{{since}}</td>\r",
							"                <td>\r",
							"                    <ul>\r",
							"                        {{#each vars}}\r",
							"                            <li>{{lf}} - Frequency: {{freq}}, Since: {{since}}</li>\r",
							"                        {{/each}}\r",
							"                    </ul>\r",
							"                </td>\r",
							"            </tr>\r",
							"        {{/each}}\r",
							"    {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    return { response: pm.response.json() }\r",
							"}\r",
							"\r",
							"pm.test(\"Sf field in the response must not be empty\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item.sf).to.not.be.empty;\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Each 'lf' in 'lfs' array is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item.lfs).to.be.an('array');\r",
							"        item.lfs.forEach(function(subItem) {\r",
							"            pm.expect(subItem.lf).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"        });\r",
							"    });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					}
				],
				"url": {
					"raw": "http://www.nactem.ac.uk/software/acromine/dictionary.py?sf=edu",
					"protocol": "http",
					"host": [
						"www",
						"nactem",
						"ac",
						"uk"
					],
					"path": [
						"software",
						"acromine",
						"dictionary.py"
					],
					"query": [
						{
							"key": "sf",
							"value": "edu"
						}
					]
				},
				"description": "\nThis endpoint makes an HTTP GET request to retrieve the dictionary of acronyms for the specified term. The response will include the acronym, frequency, and other relevant information.\n\nThe request does not have a request body, and the response returns a status code of 200 along with an array of objects containing acronym details such as \"sf\" (acronym), \"lfs\" (list of full forms), \"lf\" (full form), \"freq\" (frequency), and \"since\" (year since the acronym has been in use).\n\n"
			},
			"response": [
				{
					"name": "http://www.nactem.ac.uk/software/acromine/dictionary.py?sf=edu",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://www.nactem.ac.uk/software/acromine/dictionary.py?sf=edu",
							"protocol": "http",
							"host": [
								"www",
								"nactem",
								"ac",
								"uk"
							],
							"path": [
								"software",
								"acromine",
								"dictionary.py"
							],
							"query": [
								{
									"key": "sf",
									"value": "edu"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Date",
							"value": "Tue, 16 Jan 2024 23:59:17 GMT"
						},
						{
							"key": "Server",
							"value": "Apache/2.4.58 (Fedora Linux) OpenSSL/3.0.9 mod_perl/2.0.12 Perl/v5.36.3"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5, max=100"
						},
						{
							"key": "Connection",
							"value": "Keep-Alive"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Content-Type",
							"value": "text/plain; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "[{\"sf\": \"EDU\", \"lfs\": [{\"lf\": \"ethylenediurea\", \"freq\": 30, \"since\": 1987, \"vars\": [{\"lf\": \"ethylenediurea\", \"freq\": 26, \"since\": 1987}, {\"lf\": \"ethylene diurea\", \"freq\": 2, \"since\": 1995}, {\"lf\": \"Ethylenediurea\", \"freq\": 1, \"since\": 2007}, {\"lf\": \"Ethylene diurea\", \"freq\": 1, \"since\": 1998}]}, {\"lf\": \"5-ethyl-2'-deoxyuridine\", \"freq\": 21, \"since\": 1969, \"vars\": [{\"lf\": \"5-ethyl-2'-deoxyuridine\", \"freq\": 14, \"since\": 1969}, {\"lf\": \"ethyldeoxyuridine\", \"freq\": 4, \"since\": 1975}, {\"lf\": \"5-ethyl-2-deoxyuridine\", \"freq\": 2, \"since\": 1972}, {\"lf\": \"5-Ethyl-2'-deoxyuridine\", \"freq\": 1, \"since\": 1987}]}, {\"lf\": \"education\", \"freq\": 3, \"since\": 2003, \"vars\": [{\"lf\": \"education\", \"freq\": 3, \"since\": 2003}]}, {\"lf\": \"Emergency department ultrasound\", \"freq\": 3, \"since\": 2005, \"vars\": [{\"lf\": \"Emergency department ultrasound\", \"freq\": 3, \"since\": 2005}]}]}]\n"
				}
			]
		},
		{
			"name": "http://www.nactem.ac.uk/software/acromine/dictionary.py?sf=edu",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response body is an array with at least one element\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
							"});\r",
							"\r",
							"\r",
							"// Stores the value of \"sf\" from the response in a global variable\r",
							"var sfValue = pm.response.json()[0].sf;\r",
							"pm.globals.set(\"sfValue\", sfValue);\r",
							"\r",
							"// Retrieve the saved \"sf\" value from the variable and validate it against the response\r",
							"pm.test(\"Validate response against saved 'sf' value\", function() {\r",
							"    var savedSfValue = pm.globals.get(\"sfValue\");\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    var responseSfValue = responseBody[0].sf;\r",
							"    \r",
							"    pm.expect(responseSfValue).to.equal(savedSfValue);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					}
				],
				"url": {
					"raw": "http://www.nactem.ac.uk/software/acromine/dictionary.py?sf=edu",
					"protocol": "http",
					"host": [
						"www",
						"nactem",
						"ac",
						"uk"
					],
					"path": [
						"software",
						"acromine",
						"dictionary.py"
					],
					"query": [
						{
							"key": "sf",
							"value": "edu"
						}
					]
				}
			},
			"response": [
				{
					"name": "http://www.nactem.ac.uk/software/acromine/dictionary.py?sf=edu",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://www.nactem.ac.uk/software/acromine/dictionary.py?sf=edu",
							"protocol": "http",
							"host": [
								"www",
								"nactem",
								"ac",
								"uk"
							],
							"path": [
								"software",
								"acromine",
								"dictionary.py"
							],
							"query": [
								{
									"key": "sf",
									"value": "edu"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Date",
							"value": "Tue, 16 Jan 2024 23:59:17 GMT"
						},
						{
							"key": "Server",
							"value": "Apache/2.4.58 (Fedora Linux) OpenSSL/3.0.9 mod_perl/2.0.12 Perl/v5.36.3"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5, max=100"
						},
						{
							"key": "Connection",
							"value": "Keep-Alive"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Content-Type",
							"value": "text/plain; charset=UTF-8"
						}
					],
					"cookie": [],
					"body": "[{\"sf\": \"EDU\", \"lfs\": [{\"lf\": \"ethylenediurea\", \"freq\": 30, \"since\": 1987, \"vars\": [{\"lf\": \"ethylenediurea\", \"freq\": 26, \"since\": 1987}, {\"lf\": \"ethylene diurea\", \"freq\": 2, \"since\": 1995}, {\"lf\": \"Ethylenediurea\", \"freq\": 1, \"since\": 2007}, {\"lf\": \"Ethylene diurea\", \"freq\": 1, \"since\": 1998}]}, {\"lf\": \"5-ethyl-2'-deoxyuridine\", \"freq\": 21, \"since\": 1969, \"vars\": [{\"lf\": \"5-ethyl-2'-deoxyuridine\", \"freq\": 14, \"since\": 1969}, {\"lf\": \"ethyldeoxyuridine\", \"freq\": 4, \"since\": 1975}, {\"lf\": \"5-ethyl-2-deoxyuridine\", \"freq\": 2, \"since\": 1972}, {\"lf\": \"5-Ethyl-2'-deoxyuridine\", \"freq\": 1, \"since\": 1987}]}, {\"lf\": \"education\", \"freq\": 3, \"since\": 2003, \"vars\": [{\"lf\": \"education\", \"freq\": 3, \"since\": 2003}]}, {\"lf\": \"Emergency department ultrasound\", \"freq\": 3, \"since\": 2005, \"vars\": [{\"lf\": \"Emergency department ultrasound\", \"freq\": 3, \"since\": 2005}]}]}]\n"
				}
			]
		}
	]
}